#!/usr/bin/env ruby

require 'thor'
require 'slaw'

class SlawCLI < Thor
  # TODO: support different grammars and locales

  class_option :verbose, type: :boolean, desc: "Display log output on stderr"

  desc "parse FILE", "Parse FILE into Akoma Ntoso XML"
  option :input, enum: ['text', 'pdf'], desc: "Type of input if it can't be determined automatically"
  option :pdftotext, desc: "Location of the pdftotext binary if not in PATH"
  option :definitions, type: :boolean, desc: "Find and link definitions (this can be slow). Default: false"
  def parse(name)
    logging

    Slaw::Extract::Extractor.pdftotext_path = options[:pdftotext] if options[:pdftotext]
    extractor = Slaw::Extract::Extractor.new

    case options[:input]
    when 'pdf'
      text = extractor.extract_from_pdf(name)
    when 'text'
      text = extractor.extract_from_text(name)
    else
      text = extractor.extract_from_file(name)
    end

    generator = Slaw::ActGenerator.new
    act = generator.generate_from_text(text)

    # definitions?
    generator.builder.link_definitions(act.doc) if options[:definitions]

    puts act.to_xml(indent: 2)
  end

  map %w(--version) => :__print_version
  desc "--version", "Print slaw version info"
  def __print_version
    say "slaw #{Slaw::VERSION}"
  end

  no_commands do
    def logging
      logger = Log4r::Logger.new('Slaw')
      logger.outputters = Log4r::Outputter.stderr
      logger.outputters[0].level = options[:verbose] ? Log4r::DEBUG : Log4r::ERROR
    end
  end
end

SlawCLI.start(ARGV)
